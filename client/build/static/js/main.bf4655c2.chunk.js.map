{"version":3,"sources":["serviceWorker.ts","config.ts","auth/Auth.js","components/Callback.tsx","components/EditTodo.tsx","api/todos-api.ts","components/LogIn.tsx","components/NotFound.tsx","components/Todos.tsx","App.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","authConfig","Auth","history","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","this","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","parseHash","err","authResult","accessToken","idToken","console","log","setSession","replace","alert","error","localStorage","setItem","expiresAt","expiresIn","Date","getTime","checkSession","error_description","removeItem","return_to","origin","Callback","UploadState","Dimmer","active","Loader","content","getTodos","Axios","get","headers","response","data","items","createTodo","newTodo","post","JSON","stringify","item","patchTodo","todoId","updatedTodo","patch","deleteTodo","delete","getUploadUrl","uploadUrl","uploadFile","file","put","EditTodo","state","undefined","uploadState","NoUpload","handleFileChange","event","files","target","setState","handleSubmit","preventDefault","setUploadState","FetchingPresignedUrl","props","auth","params","UploadingFile","message","Form","onSubmit","Field","type","accept","placeholder","onChange","renderButton","Button","loading","React","LogIn","onLogin","onClick","size","color","NotFound","Todos","todos","newTodoName","loadingTodos","handleNameChange","value","onEditButtonClick","push","onTodoCreate","dueDate","calculateDueDate","name","onTodoDelete","filter","todo","onTodoCheck","pos","done","update","$set","Header","as","renderCreateTodoInput","renderTodos","Grid","Row","Column","width","Input","action","labelPosition","icon","fluid","actionPosition","Divider","renderLoading","renderTodosList","indeterminate","inline","padded","map","verticalAlign","Checkbox","checked","floated","Icon","attachmentUrl","Image","src","wrapped","date","setDate","getDate","dateFormat","App","handleLogin","handleLogout","Segment","style","padding","vertical","container","stackable","generateMenu","generateCurrentPage","Menu","Item","to","position","logInLogOutButton","path","exact","render","component","Component","createHistory","ReactDOM","test","hash","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf4655c2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// TODO: Once your application is deployed, copy an API id here so that the frontend could interact with it\n// const apiId = 'g5pm0hu237'\nconst apiId = 'xmcknux144'\nexport const apiEndpoint = `https://${apiId}.execute-api.us-east-1.amazonaws.com/dev`\n\nexport const authConfig = {\n  domain: 'muriga.auth0.com',            // Auth0 domain\n  clientId: 'BQQ7uvoshjtpCs10trpsfibiiXuZtnn7',          // Auth0 client id\n  callbackUrl: 'http://localhost:3000/callback'\n}\n","import auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor(history) {\n    this.history = history\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult);\n      } else if (err) {\n        this.history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nfunction Callback() {\n  return (\n    <Dimmer active>\n      <Loader content=\"Loading\" />\n    </Dimmer>\n  )\n}\n\nexport default Callback\n","import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport Auth from '../auth/Auth'\nimport { getUploadUrl, uploadFile } from '../api/todos-api'\n\nenum UploadState {\n  NoUpload,\n  FetchingPresignedUrl,\n  UploadingFile,\n}\n\ninterface EditTodoProps {\n  match: {\n    params: {\n      todoId: string\n    }\n  }\n  auth: Auth\n}\n\ninterface EditTodoState {\n  file: any\n  uploadState: UploadState\n}\n\nexport class EditTodo extends React.PureComponent<\n  EditTodoProps,\n  EditTodoState\n> {\n  state: EditTodoState = {\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.FetchingPresignedUrl)\n      const uploadUrl = await getUploadUrl(this.props.auth.getIdToken(), this.props.match.params.todoId)\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadUrl, this.state.file)\n\n      alert('File was uploaded!')\n    } catch (e) {\n      alert('Could not upload a file: ' + (e as Error).message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>File</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n\n    return (\n      <div>\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && <p>Uploading image metadata</p>}\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n","import { apiEndpoint } from '../config'\nimport { Todo } from '../types/Todo';\nimport { CreateTodoRequest } from '../types/CreateTodoRequest';\nimport Axios from 'axios'\nimport { UpdateTodoRequest } from '../types/UpdateTodoRequest';\n\nexport async function getTodos(idToken: string): Promise<Todo[]> {\n  console.log('Fetching todos')\n\n  const response = await Axios.get(`${apiEndpoint}/todos`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    },\n  })\n  console.log('Todos:', response.data)\n  return response.data.items\n}\n\nexport async function createTodo(\n  idToken: string,\n  newTodo: CreateTodoRequest\n): Promise<Todo> {\n  const response = await Axios.post(`${apiEndpoint}/todos`,  JSON.stringify(newTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`,\n      'Access-Control-Allow-Origin': '*',\n\n    }\n  })\n  return response.data.item\n}\n\nexport async function patchTodo(\n  idToken: string,\n  todoId: string,\n  updatedTodo: UpdateTodoRequest\n): Promise<void> {\n  await Axios.patch(`${apiEndpoint}/todos/${todoId}`, JSON.stringify(updatedTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`,\n      'Access-Control-Allow-Origin': '*',\n    }\n  })\n}\n\nexport async function deleteTodo(\n  idToken: string,\n  todoId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/todos/${todoId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`,\n      'Access-Control-Allow-Origin': '*',\n    }\n  })\n}\n\nexport async function getUploadUrl(\n  idToken: string,\n  todoId: string\n): Promise<string> {\n  const response = await Axios.post(`${apiEndpoint}/todos/${todoId}/attachment`, '', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`,\n      'Access-Control-Allow-Origin': '*',\n    }\n  })\n  return response.data.uploadUrl\n}\n\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\n  await Axios.put(uploadUrl, file)\n}\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport { Button } from 'semantic-ui-react'\n\ninterface LogInProps {\n  auth: Auth\n}\n\ninterface LogInState {}\n\nexport class LogIn extends React.PureComponent<LogInProps, LogInState> {\n  onLogin = () => {\n    this.props.auth.login()\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Please log in</h1>\n\n        <Button onClick={this.onLogin} size=\"huge\" color=\"olive\">\n          Log in\n        </Button>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Not Found</h1>\n  }\n}\n","import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createTodo, deleteTodo, getTodos, patchTodo } from '../api/todos-api'\nimport Auth from '../auth/Auth'\nimport { Todo } from '../types/Todo'\n\ninterface TodosProps {\n  auth: Auth\n  history: History\n}\n\ninterface TodosState {\n  todos: Todo[]\n  newTodoName: string\n  loadingTodos: boolean\n}\n\nexport class Todos extends React.PureComponent<TodosProps, TodosState> {\n  state: TodosState = {\n    todos: [],\n    newTodoName: '',\n    loadingTodos: true\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newTodoName: event.target.value })\n  }\n\n  onEditButtonClick = (todoId: string) => {\n    this.props.history.push(`/todos/${todoId}/edit`)\n  }\n\n  onTodoCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\n    try {\n      const dueDate = this.calculateDueDate()\n      const newTodo = await createTodo(this.props.auth.getIdToken(), {\n        name: this.state.newTodoName,\n        dueDate\n      })\n      this.setState({\n        todos: [...this.state.todos, newTodo],\n        newTodoName: ''\n      })\n    } catch {\n      alert('Todo creation failed')\n    }\n  }\n\n  onTodoDelete = async (todoId: string) => {\n    try {\n      await deleteTodo(this.props.auth.getIdToken(), todoId)\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.todoId !== todoId)\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  onTodoCheck = async (pos: number) => {\n    try {\n      const todo = this.state.todos[pos]\n      await patchTodo(this.props.auth.getIdToken(), todo.todoId, {\n        name: todo.name,\n        dueDate: todo.dueDate,\n        done: !todo.done\n      })\n      this.setState({\n        todos: update(this.state.todos, {\n          [pos]: { done: { $set: !todo.done } }\n        })\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const todos = await getTodos(this.props.auth.getIdToken())\n      this.setState({\n        todos,\n        loadingTodos: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch todos: ${(e as Error).message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">TODOs</Header>\n\n        {this.renderCreateTodoInput()}\n\n        {this.renderTodos()}\n      </div>\n    )\n  }\n\n  renderCreateTodoInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Input\n            action={{\n              color: 'teal',\n              labelPosition: 'left',\n              icon: 'add',\n              content: 'New task',\n              onClick: this.onTodoCreate\n            }}\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"To change the world...\"\n            onChange={this.handleNameChange}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderTodos() {\n    if (this.state.loadingTodos) {\n      return this.renderLoading()\n    }\n\n    return this.renderTodosList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading TODOs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderTodosList() {\n    return (\n      <Grid padded>\n        {this.state.todos.map((todo, pos) => {\n          return (\n            <Grid.Row key={todo.todoId}>\n              <Grid.Column width={1} verticalAlign=\"middle\">\n                <Checkbox\n                  onChange={() => this.onTodoCheck(pos)}\n                  checked={todo.done}\n                />\n              </Grid.Column>\n              <Grid.Column width={10} verticalAlign=\"middle\">\n                {todo.name}\n              </Grid.Column>\n              <Grid.Column width={3} floated=\"right\">\n                {todo.dueDate}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"blue\"\n                  onClick={() => this.onEditButtonClick(todo.todoId)}\n                >\n                  <Icon name=\"pencil\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onTodoDelete(todo.todoId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              {todo.attachmentUrl && (\n                <Image src={todo.attachmentUrl} size=\"small\" wrapped />\n              )}\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n  calculateDueDate(): string {\n    const date = new Date()\n    date.setDate(date.getDate() + 7)\n\n    return dateFormat(date, 'yyyy-mm-dd') as string\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, Route, Router, Switch } from 'react-router-dom'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\n\nimport Auth from './auth/Auth'\nimport { EditTodo } from './components/EditTodo'\nimport { LogIn } from './components/LogIn'\nimport { NotFound } from './components/NotFound'\nimport { Todos } from './components/Todos'\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  auth: Auth\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogin() {\n    this.props.auth.login()\n  }\n\n  handleLogout() {\n    this.props.auth.logout()\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment style={{ padding: '8em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </div>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"home\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">{this.logInLogOutButton()}</Menu.Menu>\n      </Menu>\n    )\n  }\n\n  logInLogOutButton() {\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\n          Log Out\n        </Menu.Item>\n      )\n    } else {\n      return (\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\n          Log In\n        </Menu.Item>\n      )\n    }\n  }\n\n  generateCurrentPage() {\n    if (!this.props.auth.isAuthenticated()) {\n      return <LogIn auth={this.props.auth} />\n    }\n\n    return (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => {\n            return <Todos {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route\n          path=\"/todos/:todoId/edit\"\n          exact\n          render={props => {\n            return <EditTodo {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport Auth from './auth/Auth'\nimport { Router, Route } from 'react-router-dom'\nimport Callback from './components/Callback'\nimport createHistory from 'history/createBrowserHistory'\nimport App from './App';\nconst history = createHistory()\n\nconst auth = new Auth(history)\n\nconst handleAuthentication = (props: any) => {\n  const location = props.location\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication()\n  }\n}\n\nexport const makeAuthRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          path=\"/callback\"\n          render={props => {\n            handleAuthentication(props)\n            return <Callback />\n          }}\n        />\n        <Route\n          render={props => {\n            return <App auth={auth} {...props} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n","\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}